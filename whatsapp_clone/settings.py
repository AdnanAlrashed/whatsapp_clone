"""
Django settings for whatsapp_clone project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# إعدادات قاعدة البيانات مع auto-migration
import os
import sys
from pathlib import Path
import dj_database_url

# تأكد من تطبيق migrations تلقائياً عند التشغيل
def apply_migrations_on_startup():
    if 'RENDER' in os.environ and 'DATABASE_URL' in os.environ:
        try:
            from django.core.management import execute_from_command_line
            print("🔄 تطبيق migrations تلقائياً على Render...")
            execute_from_command_line(['manage.py', 'migrate', '--noinput'])
            print("✅ تم تطبيق migrations بنجاح!")
        except Exception as e:
            print(f"❌ فشل تطبيق migrations: {e}")

# استدعاء الدالة عند بدء التشغيل
apply_migrations_on_startup()

# إنشاء superuser تلقائياً إذا لم يكن موجوداً
def create_superuser_on_startup():
    if 'RENDER' in os.environ and 'DATABASE_URL' in os.environ:
        try:
            from django.contrib.auth import get_user_model
            User = get_user_model()
            
            # تحقق إذا كان superuser موجوداً
            if not User.objects.filter(is_superuser=True).exists():
                print("🔄 إنشاء superuser تلقائياً...")
                User.objects.create_superuser(
                    email='admin@whatsappclone.com',
                    password='admin123456',
                    is_active=True,
                    is_staff=True,
                    is_superuser=True
                )
                print("✅ تم إنشاء superuser بنجاح!")
                print("📧 البريد: admin@whatsappclone.com")
                print("🔐 كلمة المرور: admin123456")
            else:
                print("✅ Superuser موجود بالفعل")
                
        except Exception as e:
            print(f"❌ فشل إنشاء superuser: {e}")

# استدعاء الدالة بعد تطبيق migrations
create_superuser_on_startup()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a%64g-zi1csj#2jg=mif25p9)ls-$f$44y%)6#yuc!k=)3r!8&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['whatsapp-clone-45cg.onrender.com']
# CSRF_TRUSTED_ORIGINS = ['https://whatsapp-clone-45cg.onrender.com']

# Application definition

INSTALLED_APPS = [
    'daphne', 
    'channels',  # للدردشة الفورية
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # 'django.contrib.staticfiles',
    'accounts',
    'calls',
    'chat',
]

# إعدادات Channels
ASGI_APPLICATION = 'whatsapp_clone.asgi.application'

# Channel layers configuration
if DEBUG:
    # للتطوير المحلي
    CHANNEL_LAYERS = {
        'default': {
            'BACKEND': 'channels.layers.InMemoryChannelLayer'
        }
    }
else:
    # للإنتاج على Render
    CHANNEL_LAYERS = {
        'default': {
            'BACKEND': 'channels_redis.core.RedisChannelLayer',
            'CONFIG': {
                "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
            },
        },
    }

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # إضافة WhiteNoise للملفات الثابتة
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'whatsapp_clone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'whatsapp_clone.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# تكوين قاعدة البيانات - استخدام PostgreSQL على Render و SQLite محلياً
if 'DATABASE_URL' in os.environ:
    # استخدام PostgreSQL على Render
    DATABASES = {
        'default': dj_database_url.config(
            default=os.environ.get('DATABASE_URL'),
            conn_max_age=600,
            conn_health_checks=True,
        )
    }
else:
    # استخدام SQLite للتطوير المحلي فقط
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ar'  # تغيير إلى العربية

TIME_ZONE = 'Asia/Riyadh'  # تغيير إلى توقيت الرياض

USE_I18N = True

USE_TZ = True

AUTH_USER_MODEL = 'accounts.CustomUser'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# إعدادات WhiteNoise للملفات الثابتة
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# إعدادات الوسائط
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# إعدادات البريد الإلكتروني
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
    EMAIL_HOST_USER = 'adnanalrashed7@gmail.com'
    EMAIL_HOST_PASSWORD = 'tnfl vldl timi pmmv'
    DEFAULT_FROM_EMAIL = 'adnanalrashed7@gmail.com'

LOGIN_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# إعدادات الأمان للإنتاج
if not DEBUG:
    # إعدادات الأمان
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # إعدادات Render-specific
    ALLOWED_HOSTS = ['whatsapp-clone-45cg.onrender.com', 'localhost', '127.0.0.1']
    CSRF_TRUSTED_ORIGINS = ['https://whatsapp-clone-45cg.onrender.com']
    
    # تسجيل الدخول الآمن
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# تكوين إضافي لـ Render
if 'RENDER' in os.environ:
    # إعدادات Render الإضافية
    ALLOWED_HOSTS.append(os.environ.get('RENDER_EXTERNAL_HOSTNAME', ''))
    
    # لوجات للتطبيقات على Render
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    }